import 'dart:convert';
import 'dart:io';
import 'package:meta/meta.dart';
import 'package:github/model_helpers.dart';
import 'package:github/model/private-vulnerability-report-create.dart';
import 'package:github/model/private-vulnerability-report-create_vulnerabilities_inner.dart';
import 'package:github/model/private-vulnerability-report-create_vulnerabilities_inner_package.dart';
import 'package:github/model/security-advisory-ecosystems.dart';
import 'package:github/model/private-vulnerability-report-create_severity.dart';
import 'package:github/model/private-vulnerability-report-create.dart';
import 'package:github/model/private-vulnerability-report-create_vulnerabilities_inner.dart';
import 'package:github/model/private-vulnerability-report-create_vulnerabilities_inner_package.dart';
import 'package:github/model/security-advisory-ecosystems.dart';
import 'package:github/model/private-vulnerability-report-create_severity.dart';
@immutable
class Private-vulnerability-report-create {
    Private-vulnerability-report-create(
        { required this.summary,required this.description, this.vulnerabilities = const [], this.cwe_ids = const [], this.severity, this.cvss_vector_string, this.start_private_fork = false,
         }
    );

    factory Private-vulnerability-report-create.fromJson(Map<String, dynamic>
        json) {
        return Private-vulnerability-report-create(
            summary: json['summary'] as String ,
            description: json['description'] as String ,
            vulnerabilities: (json['vulnerabilities'] as List?)?.map<Private-vulnerability-report-createVulnerabilitiesInner>((e) => Private-vulnerability-report-createVulnerabilitiesInner.fromJson(e as Map<String, dynamic>) ).toList() ,
            cwe_ids: (json['cwe_ids'] as List?)?.cast<String>() ,
            severity: Private-vulnerability-report-createSeverity.maybeFromJson(json['severity'] as String?) ,
            cvss_vector_string: json['cvss_vector_string'] as String? ,
            start_private_fork: (json['start_private_fork'] as bool?) ,
        );
    }

    /// Convenience to create a nullable type from a nullable json object.
    /// Useful when parsing optional fields.
    static Private-vulnerability-report-create? maybeFromJson(Map<String, dynamic>? json) {
        if (json == null) {
            return null;
        }
        return Private-vulnerability-report-create.fromJson(json);
    }

    final String  summary;
    final String  description;
    final  List<Private-vulnerability-report-createVulnerabilitiesInner>? vulnerabilities;
    final  List<String>? cwe_ids;
    final  Private-vulnerability-report-createSeverity? severity;
    final  String? cvss_vector_string;
    final  bool? start_private_fork;


    Map<String, dynamic> toJson() {
        return {
            'summary': summary,
            'description': description,
            'vulnerabilities': vulnerabilities?.map((e) => e.toJson()).toList(),
            'cwe_ids': cwe_ids,
            'severity': severity?.toJson(),
            'cvss_vector_string': cvss_vector_string,
            'start_private_fork': start_private_fork,
        };
    }

    @override
    int get hashCode =>
        Object.hash(
          summary,
          description,
          vulnerabilities,
          cwe_ids,
          severity,
          cvss_vector_string,
          start_private_fork,
        );

    @override
    bool operator ==(Object other) {
        if (identical(this, other)) return true;
        return other is Private-vulnerability-report-create
            && summary == other.summary
            && description == other.description
            && listsEqual(vulnerabilities, other.vulnerabilities)
            && listsEqual(cwe_ids, other.cwe_ids)
            && severity == other.severity
            && cvss_vector_string == other.cvss_vector_string
            && start_private_fork == other.start_private_fork
        ;
    }
}
